services:
    
  nifi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nifi_data
    restart: always
    ports:
      - 8443:8443
    environment:
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=ctsBtRBKHRAx69EqUghvvgEvjnaLjFEB
    volumes:
      - ./data:/tmp/data
    user: "0:0"
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f nifi || exit 1"]
      interval: 10s
      retries: 10
      start_period: 60s
      timeout: 5s
  
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017    
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    volumes:
      - data:/data/db

  
  postgres:
    container_name: postgres_container
    image: postgis/postgis:13-3.1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Welcome01
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    depends_on:
      nifi:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      retries: 10
      start_period: 60s
      timeout: 5s
   
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:4.16
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
       - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped

  back:
    build: ./back
    container_name: back
    depends_on:
      postgres:
        condition: service_healthy
 
  front:
    build: ./front
    container_name: front
    depends_on:
      - back
    ports:
      - "8501:8501"
 
volumes:
  data:
  postgres:
  pgadmin:
  

